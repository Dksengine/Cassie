name: Build & Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXT=".exe"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/cassie_${{ matrix.goos }}${EXT} main.go

      # Create .deb package for Ubuntu (only on Ubuntu)
      - name: Create .deb package (only on Ubuntu)
        if: matrix.goos == 'linux'
        run: |
          mkdir -p myapp/DEBIAN
          VERSION=${GITHUB_REF_NAME#v}
          echo "Package: cassie" > myapp/DEBIAN/control
          echo "Version: $VERSION" >> myapp/DEBIAN/control
          echo "Architecture: amd64" >> myapp/DEBIAN/control
          echo "Maintainer: You <labs@dksengine.com>" >> myapp/DEBIAN/control
          echo "Description: CLI to change case" >> myapp/DEBIAN/control
          mkdir -p myapp/usr/local/bin
          cp dist/cassie_${{ matrix.goos }}${EXT} myapp/usr/local/bin/cassie
          dpkg-deb --build myapp
          mv myapp.deb dist/cassie_${{ matrix.goos }}.deb

       # Create .rpm package for Fedora
      - name: Create .rpm package (only on Linux)
        if: matrix.goos == 'linux'
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          mkdir -p cassie-rpm/usr/local/bin
          cp dist/cassie_linux cassie-rpm/usr/local/bin/cassie
          tar -czvf rpmbuild/SOURCES/cassie.tar.gz -C cassie-rpm .
          echo "
          Name: cassie
          Version: $VERSION
          Release: 1
          Summary: CLI to change case
          License: MIT
          Group: Development/Tools
          BuildArch: x86_64
          %description
          CLI to change case
          %prep
          %setup -q -c -T
          %install
          mkdir -p %{buildroot}/usr/local/bin
          cp -a * %{buildroot}/usr/local/bin/
          %files
          /usr/local/bin/cassie
          %changelog
          " > rpmbuild/SPECS/cassie.spec
          rpmbuild -bb rpmbuild/SPECS/cassie.spec
          find rpmbuild/RPMS -name "*.rpm" -exec mv {} dist/ \;

      # Create Arch Linux package (PKG.TAR.ZST)
      - name: Create Arch Linux package (only on Linux)
        if: matrix.goos == 'linux'
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p cassie-arch/pkg/cassie/usr/local/bin
          mkdir -p cassie-arch/src
          cp dist/cassie_linux cassie-arch/pkg/cassie/usr/local/bin/cassie
          cd cassie-arch
          echo "
          pkgname=cassie
          pkgver=$VERSION
          pkgrel=1
          pkgdesc='CLI to change case'
          arch=('x86_64')
          license=('MIT')
          source=()
          package() {
            install -Dm755 pkg/cassie/usr/local/bin/cassie \"\$pkgdir/usr/local/bin/cassie\"
          }
          " > PKGBUILD
          tar -czf cassie-${VERSION}-1-x86_64.pkg.tar.gz -C pkg/cassie .
          mv cassie-${VERSION}-1-x86_64.pkg.tar.gz ../dist/
        # Create .rpm package for Fedora
      # Create .rpm package for Fedora
      - name: Create .rpm package (only on Linux)
        if: matrix.goos == 'linux'
        run: |
          VERSION=${GITHUB_REF_NAME#v}

          # Setup RPM build environment
          mkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}

          # Prepare the binary in a source subfolder
          mkdir -p rpmbuild/SOURCES/cassie-${VERSION}
          cp dist/cassie_linux rpmbuild/SOURCES/cassie-${VERSION}/cassie

          # Create tarball for Source0
          tar -czf rpmbuild/SOURCES/cassie-${VERSION}.tar.gz -C rpmbuild/SOURCES cassie-${VERSION}

          # Generate SPEC file
          cat > rpmbuild/SPECS/cassie.spec <<EOF
          Name: cassie
          Version: ${VERSION}
          Release: 1
          Summary: CLI to change case
          License: MIT
          Group: Development/Tools
          BuildArch: x86_64
          Source0: cassie-${VERSION}.tar.gz

          %description
          CLI to change case

          %prep
          %setup -q

          %install
          mkdir -p %{buildroot}/usr/local/bin
          cp cassie %{buildroot}/usr/local/bin/cassie
          chmod +x %{buildroot}/usr/local/bin/cassie

          %files
          /usr/local/bin/cassie

          %changelog
          * $(date "+%a %b %d %Y") You <labs@dksengine.com> - ${VERSION}-1
          - Initial RPM release
          EOF

              # Build the RPM
              rpmbuild --define "_topdir $(pwd)/rpmbuild" -bb rpmbuild/SPECS/cassie.spec

              # Move resulting RPM into dist folder
              find rpmbuild/RPMS -name "*.rpm" -exec mv {} dist/ \;

        # Create Arch Linux package (PKG.TAR.ZST)
      - name: Create Arch Linux package (only on Linux)
        if: matrix.goos == 'linux'
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p cassie-arch/pkg/cassie/usr/local/bin
          mkdir -p cassie-arch/src
          cp dist/cassie_linux cassie-arch/pkg/cassie/usr/local/bin/cassie
          cd cassie-arch
          echo "
          pkgname=cassie
          pkgver=$VERSION
          pkgrel=1
          pkgdesc='CLI to change case'
          arch=('x86_64')
          license=('MIT')
          source=()
          package() {
            install -Dm755 pkg/cassie/usr/local/bin/cassie \"\$pkgdir/usr/local/bin/cassie\"
          }
          " > PKGBUILD
          tar -czf cassie-${VERSION}-1-x86_64.pkg.tar.gz -C pkg/cassie .
          mv cassie-${VERSION}-1-x86_64.pkg.tar.gz ../dist/



      # Create Windows .exe binary (only on Windows)
      - name: Create Windows .exe binary (only on Windows)
        if: matrix.goos == 'windows'
        run: |
          mkdir -p dist
          GOOS=windows GOARCH=amd64 go build -o dist/cassie_windows.exe main.go
